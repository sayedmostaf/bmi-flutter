// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types
// coverage:ignore-file

import 'dart:typed_data';

// ignore: depend_on_referenced_packages
import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart';
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import '../../data/models/person.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <ModelEntity>[
  ModelEntity(
      id: const IdUid(1, 5224732339796799956),
      name: 'Person',
      lastPropertyId: const IdUid(8, 8858185257897704734),
      flags: 0,
      properties: <ModelProperty>[
        ModelProperty(
            id: const IdUid(1, 550831133747131363),
            name: 'id',
            type: 6,
            flags: 1),
        ModelProperty(
            id: const IdUid(2, 3540098975384256636),
            name: 'height',
            type: 6,
            flags: 0),
        ModelProperty(
            id: const IdUid(3, 8882715184362176637),
            name: 'age',
            type: 6,
            flags: 0),
        ModelProperty(
            id: const IdUid(4, 8915534287439034614),
            name: 'weight',
            type: 6,
            flags: 0),
        ModelProperty(
            id: const IdUid(5, 8635190930579011330),
            name: 'name',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(6, 8648146474246044707),
            name: 'gender',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(7, 7295459273640082272),
            name: 'bodyMassIndex',
            type: 8,
            flags: 0),
        ModelProperty(
            id: const IdUid(8, 8858185257897704734),
            name: 'dataCreated',
            type: 10,
            flags: 0)
      ],
      relations: <ModelRelation>[],
      backlinks: <ModelBacklink>[])
];

/// Open an ObjectBox store with the model declared in this file.
Future<Store> openStore(
        {String? directory,
        int? maxDBSizeInKB,
        int? fileMode,
        int? maxReaders,
        bool queriesCaseSensitiveDefault = true,
        String? macosApplicationGroup}) async =>
    Store(getObjectBoxModel(),
        directory: directory ?? (await defaultStoreDirectory()).path,
        maxDBSizeInKB: maxDBSizeInKB,
        fileMode: fileMode,
        maxReaders: maxReaders,
        queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
        macosApplicationGroup: macosApplicationGroup);

/// ObjectBox model definition, pass it to [Store] - Store(getObjectBoxModel())
ModelDefinition getObjectBoxModel() {
  final model = ModelInfo(
      entities: _entities,
      lastEntityId: const IdUid(1, 5224732339796799956),
      lastIndexId: const IdUid(0, 0),
      lastRelationId: const IdUid(0, 0),
      lastSequenceId: const IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, EntityDefinition>{
    Person: EntityDefinition<Person>(
        model: _entities[0],
        toOneRelations: (Person object) => [],
        toManyRelations: (Person object) => {},
        getId: (Person object) => object.id,
        setId: (Person object, int id) {
          object.id = id;
        },
        objectToFB: (Person object, fb.Builder fbb) {
          final nameOffset =
              object.name == null ? null : fbb.writeString(object.name!);
          final genderOffset =
              object.gender == null ? null : fbb.writeString(object.gender!);
          fbb.startTable(9);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.height);
          fbb.addInt64(2, object.age);
          fbb.addInt64(3, object.weight);
          fbb.addOffset(4, nameOffset);
          fbb.addOffset(5, genderOffset);
          fbb.addFloat64(6, object.bodyMassIndex);
          fbb.addInt64(7, object.dataCreated?.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final dataCreatedValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 18);
          final object = Person()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..height =
                const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 6)
            ..age =
                const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8)
            ..weight =
                const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 10)
            ..name = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 12)
            ..gender = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 14)
            ..bodyMassIndex = const fb.Float64Reader()
                .vTableGetNullable(buffer, rootOffset, 16)
            ..dataCreated = dataCreatedValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(dataCreatedValue);

          return object;
        })
  };

  return ModelDefinition(model, bindings);
}

/// [Person] entity fields to define ObjectBox queries.
class Person_ {
  /// see [Person.id]
  static final id = QueryIntegerProperty<Person>(_entities[0].properties[0]);

  /// see [Person.height]
  static final height =
      QueryIntegerProperty<Person>(_entities[0].properties[1]);

  /// see [Person.age]
  static final age = QueryIntegerProperty<Person>(_entities[0].properties[2]);

  /// see [Person.weight]
  static final weight =
      QueryIntegerProperty<Person>(_entities[0].properties[3]);

  /// see [Person.name]
  static final name = QueryStringProperty<Person>(_entities[0].properties[4]);

  /// see [Person.gender]
  static final gender = QueryStringProperty<Person>(_entities[0].properties[5]);

  /// see [Person.bodyMassIndex]
  static final bodyMassIndex =
      QueryDoubleProperty<Person>(_entities[0].properties[6]);

  /// see [Person.dataCreated]
  static final dataCreated =
      QueryIntegerProperty<Person>(_entities[0].properties[7]);
}